name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
    - 'main'

env:
  REGISTRY: ghcr.io
  DOCKERFILE_TARGET: "prod"
  DOCKERFILE_CONTEXT: "city-api"
  VALUES_FILE_PATH: "charts/city/values.yaml"
  YQ_TAG_PATH: ".city.image.tag"

jobs:
  lint-city:
    name: City linter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3


    ## Golang linter
    ##
    - uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: false

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.53
        working-directory: city-api


    ## Golang test
    - name: golangci-test
      run: go test -v ./...
      with:
        working-directory: city-api

  build-and-push-images:
    name: Build and publish image city-api to ghcr.io
    runs-on: ubuntu-latest
    needs:
    - lint-city
    permissions:
      packages: write
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
    - uses: actions/checkout@v3


    ## Dockerfile linter
    ##
    - name: run kics Scan
      uses: checkmarx/kics-github-action@v1.7.0
      with:
        path: city-api/Dockerfile
        fail_on: high
        output_path: results-dir

    - name: display kics results
      run: |
        cat results-dir/results.json


    ## Authenticate to registry repo github
    ##
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}


    ## Build and push Docker image
    ##
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}
        tags: type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.DOCKERFILE_CONTEXT }}
        target: ${{ env.DOCKERFILE_TARGET }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}



  prod-deploy-test:
    name: Production deployment test with new image
    runs-on: ubuntu-latest
    needs:
    - build-and-push-images

    steps:
    - uses: actions/checkout@v3


    ## Update tag image
    ##
    - env:
        TAG_VERSION: ${{ needs.build-and-push-images.outputs.version }}
      name: Overwrite tag image chart
      uses: mikefarah/yq@v4.27.5
      with:
        cmd: yq -i '${{ env.YQ_TAG_PATH }} = strenv(TAG_VERSION)' ${{ env.VALUES_FILE_PATH }}


    ## Test deploy with kind
    ##
    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.4.0

    - name: Deploy Helm chart
      run: |
        helm upgrade --install city charts/city -n city --create-namespace

    - name: Wait for pod to be running
      run: |
        kubectl wait --for=condition=Ready pod -l app=city --timeout=300s -n city



  commit-new-image:
    name: Update and Commit change values helmchart
    runs-on: ubuntu-latest
    needs:
    - prod-deploy-test
    - build-and-push-images
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3


    ## Update tag image
    ##
    - env:
        TAG_VERSION: ${{ needs.build-and-push-images.outputs.version }}
      name: Overwrite tag image chart
      uses: mikefarah/yq@v4.27.5
      with:
        cmd: yq -i '${{ env.YQ_TAG_PATH }} = strenv(TAG_VERSION)' ${{ env.VALUES_FILE_PATH }}


    ## Commit change 
    ##
    - name: Commit and Push changes
      uses: EndBug/add-and-commit@v9
      with:
        message: 'refact(charts/portal-demo): update tag image helmchart'
        add: ${{ env.VALUES_FILE_PATH }}
        push: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
